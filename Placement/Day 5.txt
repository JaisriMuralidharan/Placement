1.String palindrome or not

import java.util.*;
public class Main{
        public static void main(String[]args)
        {
                Scanner sc=new Scanner(System.in);
                String a=sc.nextLine();
                String r="";
                for(int i=a.length()-1;i>=0;i--)
                {
                        r=r+a.charAt(i);
                }
                System.out.println((r.equals(a))?"Palindrome":"Not a palindrome");
                
        }
}

2.check the no.of.times the indexed element is repeated

import java.util.*;
public class Main{
        public static void main(String[]args)
        {
                Scanner sc=new Scanner(System.in);
                String str=sc.nextLine();
                int a=sc.nextInt();
                char c=sc.next().charAt(0);
                int count=0;
                for(int i=0;i<str.length();i++)
                {
                        char b=str.charAt(i);
                        if(b==c)
                        {
                                count++;
                        }
                }
                System.out.println(count);
                     
        }
}

3.Remove the uppercase characters and join them and finally count the lenght of the string

import java.util.*;
public class Main{
        public static void main(String[]args)
        {
                Scanner sc=new Scanner(System.in);
                String str=sc.nextLine();
                String r="";
                for(int i=0;i<str.length();i++)
                {
                        char ch=str.charAt(i);
                        if(ch>='a'&&ch<='z')
                        {
                                r+=ch;
                        }
                }
                System.out.println(r);
                System.out.println(r.length());
            
        }
}

4.Remove the character from the string and print 

import java.util.*;
public class Main
{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        char w=sc.next().charAt(0);
        String r="";
        for(int i=0;i<s.length();i++)
        {
            char ch=s.charAt(i);
            if(ch!=w)
            {
                r+=ch;
            }
        }
        System.out.print(r);
    }
}


5.check the no.of correct sequence of characters


import java.util.*;
public class Main
{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        int count=0;
        for(int i=0;i<s.length();i++)
        {
            char ch=s.charAt(i);
            if(ch<='A'&&ch>='Z')
            {
              ch=(char)(ch^32);
            }
            if(ch==(char)('a'+i))
            {
                    count++;
            }
        }
        System.out.print(count);
    }
}
6. to  print a character only one time in the reverse order

import java.util.*;
public class Main{
    public static void main(String[] args){
    Scanner sc=new Scanner(System.in);
    String s=sc.nextLine();
    String t="";
    for(int i=0;i<s.length();i++)
    {
        if(i==0 ||s.charAt(i) !=s.charAt(i-1))
        {
        t+=s.charAt(i);
      }
    }
    s="";
     for(int i=t.length()-1;i>=0;i--)
     {
     s+=t.charAt(i);
}
  System.out.print(s);
    }
}

7.Reverse the strings
 
 import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
      String word="";
      String result="";
      for(int i=0;i<s.length();i++){
      char ch=s.charAt(i);
      if(ch!=' '){
            word +=ch;
      }
      else{
            result =word+" "+result;
            word="";
      }
    }
    result=word+" "+result;
    s ="";
    for(int i=0;i<result.length();i++){
        s+=result.charAt(i);
    }
    System.out.println(s);
    }
}

8.To give the  count of the most repeated characterin the word
 
import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        int max=0;
        int f[]=new int[26];
        for(int i=0;i<s.length();i++)
        {
                int index=s.charAt(i)-'a';
                f[index]++;
                if(f[index]>max)
                {
                        max=f[index];
                        
          
                }
                System.out.print(f[index]);
        }
        
        System.out.println();
        System.out.println(max);
    }
}


9.Find the largest word count in the string


import java.util.*;
 public class Main{
     public static void main(String[] args){
         Scanner sc=new Scanner(System.in);
         String s=sc.nextLine();
         int max=0,count=0;
         for(int i=0;i<s.length();i++){
             char ch=s.charAt(i);
             if((ch>='A' && ch<='Z') ||(ch>='a' && ch<='z')  ){
                 count++;
             }else if(ch==' '){
                 if(count>max){
                     max=count;
                 }
                 count=0;
             }
         }
         System.out.print(max);
     }
 }

10.Strong password or weak password

import java.util.*;
public class Main{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        int f1=0,f2=0,f3=0,f4=0;
        for(int i=0;i<s.length();i++)
        {
            char ch=s.charAt(i);
            if(ch>='a' && ch<='z')
            {
                f1=1;
            }
            else if(ch>='A' && ch<='Z')
            {
                f2=1;
            }
            else if(ch>='0' && ch<='9')
            {
                f3=1;
            }
            else
            {
                f4=1;
            }
        }
        if(f1==1 && f2==1 && f3==1 && f4==1 && s.length() >=8)
        {
            System.out.println("Strong password");
        }
        else
        {
            System.out.println("Weak password");
        }
    }
}
